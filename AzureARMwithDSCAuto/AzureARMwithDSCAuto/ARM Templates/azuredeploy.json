{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "DeploymentPrefix": {
      "type": "string",
      "defaultValue": "TEST",
      "metadata": {
        "description": "Prefix that will we used in resource naming convention"
      }
    },
    "VNet1AddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "Address prefix of Virtual Network 1, like 10.1.0.0/8 ou 10.2.0.0/16"
      }
    },
    "Vnet1CoreSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.1.1.0/24",
      "metadata": {
        "description": "Address prefix of subnet Core of virtual network 1"
      }
    },
    "Vnet1BackEndSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.1.2.0/24",
      "metadata": {
        "description": "Address prefix of subnet BackEnd of virtual network 1"
      }
    },
    "Vnet1FrontEndSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.1.3.0/24",
      "metadata": {
        "description": "Address prefix of subnet Frontend of virtual network 1"
      }
    },
    "NumberOfWFE": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of Web-Front End servers that will be provisionned"
      }
    },
    "LocalAdminName": {
      "type": "string",
      "defaultValue": "AzureAdmin",
      "metadata": {
        "description": "Name of the local admin of the machines"
      }
    },
    "LocalAdminPassword": {
      "defaultValue": null,
      "type": "securestring"
    },
    "registrationKey": {
      "type": "securestring",
      "metadata": {
        "description": "Registration key to use to onboard to the Azure Automation DSC pull/reporting server"
      }
    },
    "registrationUrl": {
      "type": "string",
      "metadata": {
        "description": "Registration url of the Azure Automation DSC pull/reporting server"
      }
    },
    "DSCRepoURI": {
      "type": "string",
      "metadata": {
        "description": "URI to DSC zip package"
      }
    },
    "DSCRepoKey": {
      "type": "securestring",
      "metadata": {
        "description": "SAS Key to access the repo"
      }
    },
    "DSCFileName": {
      "type": "string",
      "metadata": {
        "description": "File name of the DSC script file, for example RegistrationMetaConfigV2.ps1"
      }
    },
    "DSCPackageFileName": {
      "type": "string",
      "metadata": {
        "description": "File name of the DSC Package, for example dsc.zip"
      }
    },
    "DSCPackageFunctionName": {
      "type": "string",
      "metadata": {
        "description": "File name of the DSC Package, for example RegistrationMetaConfigV2"
      }
    }
  },
  "variables": {
    "Location": "[resourceGroup().location]",
    "Vnet1RegionShortName": "[replace(variables('Location'),' ','')]",
    "Vnet1Name": "[concat(parameters('DeploymentPrefix'),'-',variables('Vnet1RegionShortName'),'-Vnet')]",
    "Vnet1GatewayName": "[concat(variables('Vnet1Name'),'-GW')]",
    "Vnet1GatewayPIPName": "[concat(variables('VNet1GatewayName'),'-PIP')]",
    "Vnet1ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet1Name'))]",
    "SimplifiedPrefix": "[toLower(parameters('DeploymentPrefix'))]",
    "SimplifiedLocation": "[tolower(replace(variables('Location'),' ',''))]",
    "StandardStorageAccountName": "[concat(variables('SimplifiedPrefix'),variables('SimplifiedLocation'),'stdsa')]",
    "PremiumStorageAccountName": "[concat(variables('SimplifiedPrefix'),variables('SimplifiedLocation'),'prmsa')]",
    "SQLVMname": "[concat(parameters('DeploymentPrefix'),'-',variables('Location'),'-SQL')]",
    "WFEVMname": "[concat(parameters('DeploymentPrefix'),'-',variables('Location'),'-WFE')]",
    "ShortSQLVMname": "[concat(parameters('DeploymentPrefix'),'-SQL')]",
    "ShortWFEVMname": "[concat(parameters('DeploymentPrefix'),'-WFE')]",
    "SQLASName": "[concat(variables('SQLVMname'),'-AS')]",
    "WFEASName": "[concat(variables('WFEVMname'),'-AS')]",
    "SQLPIPName": "[concat(variables('SQLVMname'),'-PIP')]",
    "WFENLBName": "[concat(parameters('DeploymentPrefix'),'-WFE-NLB')]",
    "WFENLBPIPName": "[concat(variables('WFENLBName'),'-PIP')]",
    "WFENLBPIPDNSName": "[concat(variables('SimplifiedPrefix'),variables('SimplifiedLocation'),'wfepip')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('WFENLBName'))]",
    "frontendAddressPoolName": "FrontEndPool",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('frontendAddressPoolName'))]",
    "backendAddressPoolName": "BackEndPool",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('backendAddressPoolName'))]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "WFENSGName": "[concat(variables('WFEVMname'),'-NSG')]",
    "SQLNSGName": "[concat(variables('SQLVMname'),'-NSG')]",
    "SQLNicName": "[concat(variables('SQLVMname'),'-NIC')]",
    "SQLSubnetRefId": "[concat(variables('Vnet1ID'),'/subnets/', 'BackEnd')]",
    "WFESubnetRefId": "[concat(variables('Vnet1ID'),'/subnets/', 'FrontEnd')]",
    "SkuTier": "Standard",
    "DSCPackageFullURL": "[concat(parameters('DSCRepoURI'),'/',parameters('DSCPackageFileName'))]",
    "DSCFunctionFileIsolator": "\\",
    "DSCPackageConfigFunction": "[concat(parameters('DSCFileName'),variables('DSCFunctionFileIsolator'),parameters('DSCPackageFunctionName'))]"
  },
  "resources": [
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('Vnet1Name')]",
      "location": "[variables('Location')]",
      "tags": { "displayName": "Vnet" },
      "comments": "This virtual network will be used by all the components of this specific deployment",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('VNet1AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "Core",
            "properties": {
              "addressPrefix": "[parameters('Vnet1CoreSubnetPrefix')]"
            }
          },
          {
            "name": "BackEnd",
            "properties": {
              "addressPrefix": "[parameters('Vnet1BackendSubnetPrefix')]"
            }
          },
          {
            "name": "FrontEnd",
            "properties": {
              "addressPrefix": "[parameters('Vnet1FrontendSubnetPrefix')]"
            }

          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Premium_LRS",
        "tier": "Premium"
      },
      "kind": "Storage",
      "name": "[variables('PremiumStorageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "Storage Account" },
      "comments": "This storage account will be used to store the disks of the VM of this specific deployment",
      "properties": {},
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('SQLASName')]",
      "tags": { "displayName": "Availability Set - SQL Server" },
      "comments": "This availability set aggregates the SQL servers of this specific deployment",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 3
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('WFEASName')]",
      "apiVersion": "2015-06-15",
      "tags": { "displayName": "Availability Set - Web Front-End" },
      "comments": "This availability set aggregates the web font-end servers of this specific deployment",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 3
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('WFENLBPIPName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "Public IP - WFE load-balancer" },
      "comments": "This public IP publishes the load-balancer in front of the web font-end servers of this specific deployment",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('WFENLBPIPDNSName')]"
        }
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('SQLNSGName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "Network Security Group - SQL" },
      "comments": "This is used to secure access to the SQL VM from internet",
      "properties": {
        "securityRules": []
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('WFENSGName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "Network Security Group - WFE" },
      "comments": "This public IP publishes the load-balancer in front of the web font-end servers of this specific deployment",
      "properties": {
        "securityRules": [
          {
            "name": "HTTP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1001,
              "direction": "Inbound"
            }
          },
          {
            "name": "default-allow-rdp",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      },
      "resources": [],
      "dependsOn": []
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('WFENLBName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "Azure Load-balancer - WFE" },
      "comments": "This public IP publishes the load-balancer in front of the web font-end servers of this specific deployment",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('WFENLBPIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('frontendAddressPoolName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/PublicIPAddresses', variables('WFENLBPIPName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('backendAddressPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "Web",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('SQLNicName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "NIC - SQL Server" },
      "comments": "This NIC is plugged to the SQL server of this specific deployment",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SQLSubnetRefId')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('SQLNSGName'))]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[variables('Vnet1ID')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('SQLNSGName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('ShortWFEVMName'),copyIndex(),'-NIC')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "NIC - Web Front-end Servers - Looped" },
      "comments": "This NIC is plugged to the web font-end servers of this specific deployment",
      "copy": {
        "name": "NICcopy",
        "count": "[parameters('NumberOfWFE')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('WFESubnetRefId')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/',variables('backendAddressPoolName'))]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('WFENSGName'))]"
        }
      },
      "resources": [],
      "dependsOn": [
        "[variables('Vnet1ID')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('WFENSGName'))]",
        "[variables('lbID')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('ShortSQLVMname')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "VM - SQL Server" },
      "comments": "This is the VM hosting SQL Server",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('SQLASname'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_DS3_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2016-WS2016",
            "sku": "Enterprise",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('SQLVMname')]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('https', '://', variables('PremiumStorageAccountName'), '.blob.core.windows.net', concat('/vhds/',variables('SQLVMname'),'-osdisk.vhd'))]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "[concat(variables('SQLVMname'),'-datadisk-1')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('https', '://', variables('PremiumStorageAccountName'), '.blob.core.windows.net', concat('/vhds/', variables('SQLVMname'),'-datadisk-1.vhd'))]"
              },
              "caching": "ReadOnly",
              "diskSizeGB": "1023"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('ShortSQLVMname')]",
          "adminUsername": "[parameters('LocalAdminName')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('LocalAdminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('SQLNicName'))]"
            }
          ]
        }
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('SQLASName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('PremiumStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('SQLNicName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('ShortWFEVMname'),copyIndex())]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "VM - WFE Servers - Looped" },
      "comments": "This is the VM hosting SQL Server",
      "copy": {
        "name": "WFEcopy",
        "count": "[parameters('NumberOfWFE')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('WFEASname'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_DS3_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('ShortWFEVMname'),copyIndex())]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('https', '://', variables('PremiumStorageAccountName'), '.blob.core.windows.net', concat('/vhds/', variables('ShortWFEVMname'),copyIndex(),'-','-osdisk.vhd'))]"
            },
            "caching": "ReadWrite"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[concat(variables('ShortWFEVMname'),copyIndex())]",
          "adminUsername": "[parameters('LocalAdminName')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "adminPassword": "[parameters('LocalAdminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('ShortWFEVMName'),copyIndex(),'-NIC'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "Microsoft.Powershell.DSC",
          "apiVersion": "2016-03-30",
          "location": "[variables('Location')]",
          "tags": { "displayName": "VM Extension - DSC MetaConfiguration" },
          "comments": "This extension is used to push the metaconfiguration file to the VM to set the VM to register with the Azure Automation push server",
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[variables('DSCPackageFullURL')]",
              "configurationFunction": "[variables('DSCPackageConfigFunction')]",
              "SasToken": "[parameters('DSCRepoKey')]",
              "Properties": [
                {
                  "Name": "RegistrationKey",
                  "Value": {
                    "UserName": "PLACEHOLDER_DONOTUSE",
                    "Password": "PrivateSettingsRef:registrationKeyPrivate"
                  },
                  "TypeName": "System.Management.Automation.PSCredential"
                },
                {
                  "Name": "RegistrationUrl",
                  "Value": "[parameters('registrationUrl')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "NodeConfigurationName",
                  "Value": "TestConfig.WebServer",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationMode",
                  "Value": "applyAndAutoCorrect",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationModeFrequencyMins",
                  "Value": "15",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RefreshFrequencyMins",
                  "Value": "30",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RebootNodeIfNeeded",
                  "Value": true,
                  "TypeName": "System.Boolean"
                },
                {
                  "Name": "ActionAfterReboot",
                  "Value": "continueConfiguration",
                  "TypeName": "System.String"
                },
                {
                  "Name": "AllowModuleOverwrite",
                  "Value": true,
                  "TypeName": "System.Boolean"
                },
                {
                  "Name": "Timestamp",
                  "Value": "12/27/2016 3:53:00 PM",
                  "TypeName": "System.String"
                }
              ]
            },
            "protectedSettings": {
              "Items": {
                "registrationKeyPrivate": "[parameters('registrationKey')]"
              }

            }
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('ShortWFEVMname'),copyIndex()))]"
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('WFEASName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('PremiumStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('ShortWFEVMName'),copyIndex(),'-NIC'))]"
      ]
    }
  ],
  "outputs": {
        "DSCPackageFullURLOutput": {
          "type": "string",
          "value": "[variables('DSCPackageFullURL')]"
        },
        "DSCRepoKeyOutput": {
          "type": "string",
          "value": "[parameters('DSCRepoKey')]"
        }
      }
    }